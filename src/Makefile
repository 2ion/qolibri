#############################################################################
# Makefile for building: bin/qolibri
# Generated by qmake (2.01a) (Qt 4.3.1) on: ? 2 ? 21 15:43:02 2008
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -leb -lQtGui -L/usr/lib -L/usr/X11R6/lib -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = qolibri.cpp \
		mainwindow.cpp \
		method.cpp \
		book.cpp \
		ebook.cpp \
		ebook_hooks.cpp \
		bookview.cpp \
		groupdock.cpp \
		groupwidget.cpp \
		bookwidget.cpp \
		configure.cpp \
		booksetting.cpp \
		fontsetting.cpp \
		ssheetsetting.cpp \
		configsetting.cpp \
		statusbutton.cpp moc_mainwindow.cpp \
		moc_bookview.cpp \
		moc_groupdock.cpp \
		moc_groupwidget.cpp \
		moc_bookwidget.cpp \
		moc_booksetting.cpp \
		moc_fontsetting.cpp \
		moc_ssheetsetting.cpp \
		moc_configsetting.cpp \
		moc_statusbutton.cpp \
		qrc_qolibri.cpp
OBJECTS       = qolibri.o \
		mainwindow.o \
		method.o \
		book.o \
		ebook.o \
		ebook_hooks.o \
		bookview.o \
		groupdock.o \
		groupwidget.o \
		bookwidget.o \
		configure.o \
		booksetting.o \
		fontsetting.o \
		ssheetsetting.o \
		configsetting.o \
		statusbutton.o \
		moc_mainwindow.o \
		moc_bookview.o \
		moc_groupdock.o \
		moc_groupwidget.o \
		moc_bookwidget.o \
		moc_booksetting.o \
		moc_fontsetting.o \
		moc_ssheetsetting.o \
		moc_configsetting.o \
		moc_statusbutton.o \
		qrc_qolibri.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		src.pro
QMAKE_TARGET  = qolibri
DESTDIR       = bin/
TARGET        = bin/qolibri

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) bin/ || $(MKDIR) bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile src.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qolibri1.0.0 || $(MKDIR) .tmp/qolibri1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qolibri1.0.0/ && $(COPY_FILE) --parents mainwindow.h method.h book.h ebook.h ebook_hooks.h bookview.h groupdock.h groupwidget.h bookwidget.h configure.h booksetting.h fontsetting.h ssheetsetting.h configsetting.h ssheet.h titlelabel.h statusbutton.h .tmp/qolibri1.0.0/ && $(COPY_FILE) --parents qolibri.qrc .tmp/qolibri1.0.0/ && $(COPY_FILE) --parents qolibri.cpp mainwindow.cpp method.cpp book.cpp ebook.cpp ebook_hooks.cpp bookview.cpp groupdock.cpp groupwidget.cpp bookwidget.cpp configure.cpp booksetting.cpp fontsetting.cpp ssheetsetting.cpp configsetting.cpp statusbutton.cpp .tmp/qolibri1.0.0/ && $(COPY_FILE) --parents qolibri_ja_JP.ts .tmp/qolibri1.0.0/ && (cd `dirname .tmp/qolibri1.0.0` && $(TAR) qolibri1.0.0.tar qolibri1.0.0 && $(COMPRESS) qolibri1.0.0.tar) && $(MOVE) `dirname .tmp/qolibri1.0.0`/qolibri1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qolibri1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_bookview.cpp moc_groupdock.cpp moc_groupwidget.cpp moc_bookwidget.cpp moc_booksetting.cpp moc_fontsetting.cpp moc_ssheetsetting.cpp moc_configsetting.cpp moc_statusbutton.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_bookview.cpp moc_groupdock.cpp moc_groupwidget.cpp moc_bookwidget.cpp moc_booksetting.cpp moc_fontsetting.cpp moc_ssheetsetting.cpp moc_configsetting.cpp moc_statusbutton.cpp
moc_mainwindow.cpp: method.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_bookview.cpp: method.h \
		bookview.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bookview.h -o moc_bookview.cpp

moc_groupdock.cpp: bookwidget.h \
		book.h \
		method.h \
		groupdock.h
	/usr/bin/moc $(DEFINES) $(INCPATH) groupdock.h -o moc_groupdock.cpp

moc_groupwidget.cpp: book.h \
		groupwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) groupwidget.h -o moc_groupwidget.cpp

moc_bookwidget.cpp: book.h \
		bookwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bookwidget.h -o moc_bookwidget.cpp

moc_booksetting.cpp: booksetting.h
	/usr/bin/moc $(DEFINES) $(INCPATH) booksetting.h -o moc_booksetting.cpp

moc_fontsetting.cpp: book.h \
		fontsetting.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fontsetting.h -o moc_fontsetting.cpp

moc_ssheetsetting.cpp: ssheetsetting.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ssheetsetting.h -o moc_ssheetsetting.cpp

moc_configsetting.cpp: configsetting.h
	/usr/bin/moc $(DEFINES) $(INCPATH) configsetting.h -o moc_configsetting.cpp

moc_statusbutton.cpp: statusbutton.h
	/usr/bin/moc $(DEFINES) $(INCPATH) statusbutton.h -o moc_statusbutton.cpp

compiler_rcc_make_all: qrc_qolibri.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_qolibri.cpp
qrc_qolibri.cpp: qolibri.qrc \
		images/find_l.png \
		images/zoomout.png \
		images/dock.png \
		images/dock_mac.png \
		images/stylesheet.png \
		images/books.png \
		images/font1.png \
		images/open.png \
		images/group.png \
		images/tabs.png \
		images/uparrow.png \
		images/cut.png \
		images/font2.png \
		images/configure.png \
		images/ruby.png \
		images/zoomin.png \
		images/rightarrow.png \
		images/setting.png \
		images/closetab.png \
		images/stop.png \
		images/font3.png \
		images/key_enter.png \
		images/history.png \
		images/bookmark.png \
		images/title.png \
		images/downarrow.png \
		images/marktab.png \
		images/editclear.png \
		images/stylesheet2.png \
		images/book.png \
		images/delete.png \
		images/copy.png \
		images/clear.png \
		images/bookopen.png \
		images/edit.png \
		images/stylesheet3.png \
		images/paste.png \
		images/find.png
	/usr/bin/rcc -name qolibri qolibri.qrc -o qrc_qolibri.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

qolibri.o: qolibri.cpp mainwindow.h \
		method.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qolibri.o qolibri.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		method.h \
		ssheet.h \
		ebook.h \
		book.h \
		bookview.h \
		statusbutton.h \
		groupdock.h \
		bookwidget.h \
		booksetting.h \
		fontsetting.h \
		ssheetsetting.h \
		configure.h \
		configsetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

method.o: method.cpp method.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o method.o method.cpp

book.o: book.cpp book.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o book.o book.cpp

ebook.o: ebook.cpp ebook.h \
		ebook_hooks.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ebook.o ebook.cpp

ebook_hooks.o: ebook_hooks.cpp ebook.h \
		ebook_hooks.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ebook_hooks.o ebook_hooks.cpp

bookview.o: bookview.cpp mainwindow.h \
		method.h \
		book.h \
		bookview.h \
		ebook.h \
		configure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bookview.o bookview.cpp

groupdock.o: groupdock.cpp groupdock.h \
		bookwidget.h \
		book.h \
		method.h \
		groupwidget.h \
		configure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o groupdock.o groupdock.cpp

groupwidget.o: groupwidget.cpp book.h \
		groupwidget.h \
		ebook.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o groupwidget.o groupwidget.cpp

bookwidget.o: bookwidget.cpp book.h \
		ebook.h \
		bookwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bookwidget.o bookwidget.cpp

configure.o: configure.cpp configure.h \
		ssheet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configure.o configure.cpp

booksetting.o: booksetting.cpp booksetting.h \
		book.h \
		bookwidget.h \
		groupwidget.h \
		titlelabel.h \
		ebook.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o booksetting.o booksetting.cpp

fontsetting.o: fontsetting.cpp book.h \
		fontsetting.h \
		configure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fontsetting.o fontsetting.cpp

ssheetsetting.o: ssheetsetting.cpp ssheetsetting.h \
		titlelabel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ssheetsetting.o ssheetsetting.cpp

configsetting.o: configsetting.cpp configure.h \
		configsetting.h \
		titlelabel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configsetting.o configsetting.cpp

statusbutton.o: statusbutton.cpp statusbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o statusbutton.o statusbutton.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_bookview.o: moc_bookview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bookview.o moc_bookview.cpp

moc_groupdock.o: moc_groupdock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_groupdock.o moc_groupdock.cpp

moc_groupwidget.o: moc_groupwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_groupwidget.o moc_groupwidget.cpp

moc_bookwidget.o: moc_bookwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bookwidget.o moc_bookwidget.cpp

moc_booksetting.o: moc_booksetting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_booksetting.o moc_booksetting.cpp

moc_fontsetting.o: moc_fontsetting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fontsetting.o moc_fontsetting.cpp

moc_ssheetsetting.o: moc_ssheetsetting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ssheetsetting.o moc_ssheetsetting.cpp

moc_configsetting.o: moc_configsetting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_configsetting.o moc_configsetting.cpp

moc_statusbutton.o: moc_statusbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_statusbutton.o moc_statusbutton.cpp

qrc_qolibri.o: qrc_qolibri.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_qolibri.o qrc_qolibri.cpp

####### Install

install_i18n: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/qt4/translations/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/qt4/translations/ 
	cp -f i18n/* /usr/share/qt4/translations


install:  install_i18n  FORCE

uninstall:   FORCE

FORCE:

